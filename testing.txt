placeholder
test plan.

Sat Dec 11 12:54:11 EST 2010
Firstly, create a print function
Then, create an insert function, and thus these two functions can be tested ;)

create inorder and preorder print :)
such that the tree structure can be recreated.

try use ANSI CODES for bold to indicate ends of words :)


I have written a function to print all the list words ;)
// not sure about analysing the complexity...
but yeah, it just pretty much does extract(root,"");





Tue Dec 14 23:40:03 EST 2010
well, I figured out what output bugged it and put it into the main ;)
and slowly testing all the functions



Fri Dec 17 14:50:10 EST 2010
To test the fact that the nodes are inserted in Order

alpha
beta
delta
cat

should output
alpha
beta
cat
delta

Fri Dec 17 15:05:25 EST 2010
in order to test the change of root part :)
using the input 
beta
alpha
delta
cat

should print same as above :)

Fri Dec 17 15:10:16 EST 2010
fixed :)



Sat Jan  8 12:28:00 EST 2011
by using various input (self created, contrivedLookupTest)
and comparing sort $file with ./words < file

I found that there were errors :)

test case:
ab
abc
abcd are in dictionary

distCompletions doesn't return abc or abcd

Actually this is wrong, distCompletions is working correctly
Insert isn't
File: tc2
expected trie,
a
  a \t
    b \t
    d \t

File: tc3

File: tc4
Aim: To test Distcompletions
Expected Output:
store
stored
